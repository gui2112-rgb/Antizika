<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>